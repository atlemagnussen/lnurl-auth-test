import path from "path"
import express from "express"
import bodyParser from "body-parser"
import config from "./config"


const app = express()
app.use(bodyParser.json()) 

const rootFolder = __dirname
console.log("rootFolder", rootFolder)
const web = path.resolve("..", "web/dist")
console.log("web", web)
const webIndex = path.resolve(web, "index.html")

app.use(express.static(web))

app.get('/api/login', (req,res)=>{
    try{
        const { tag, k1, sig, key } = req.query;
        if(!lnurl.verifyAuthorizationSignature(sig,k1,key))
            throw new Error('invalid signature');
        if(!isValidK1(k1))
            throw new Error("this k1 isn't generated by us");

        const user = createUser(key); // method for creating a new user if not exist before for this key
                                      // think of the key as an id.


        // generate the auth jwt token
        const hour = 3600000
        const maxAge = 30 * 24 * hour;

        const jwt = await new jose.SignJWT({ pubKey: key })
            .setProtectedHeader({ alg: 'HS256' })
            .setIssuedAt()
            .setExpirationTime(maxAge)
            //TODO: Set audience, issuer
            .sign(Buffer.from(JWT_SECRET, 'utf-8'))

        // associate the auth token with the hash in the store
        await storePair(k1, jwt);


        return res.status(200).json({ status: "OK" })

    } catch(error){
        return res.status(400).json({ status: 'ERROR', reason: 'Something wrong happened...' })
    }
})

app.get('*', function (req, res) {
    res.sendFile(webIndex)
})

let port = config.port ? config.port : 5000
app.listen(port, '0.0.0.0', () => {
    console.log(`[server]: Server is running at http://localhost:${port}`)
})
